/scratch/optpar01/test/webinar/lid/org/main.cu:349:2: warning: DPCT1065:0: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
        __syncthreads();
        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:357:3: warning: DPCT1065:1: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
                __syncthreads();
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:535:2: warning: DPCT1065:2: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
        __syncthreads();
        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:543:3: warning: DPCT1065:3: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
                __syncthreads();
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:610:2: warning: DPCT1065:4: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
        __syncthreads();
        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:618:3: warning: DPCT1065:5: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
                __syncthreads();
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:708:2: warning: DPCT1065:6: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
        __syncthreads();
        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:716:3: warning: DPCT1065:7: Consider replacing sycl::nd_item::barrier() with sycl::nd_item::barrier(sycl::access::fence_space::local_space) for better performance, if there is no access to global memory.
                __syncthreads();
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:781:20: warning: DPCT1003:8: Migrated API does not return error code. (*, 0) is inserted. You may need to rewrite this code.
                checkCudaErrors (cudaSetDevice (0) );
                                 ^
/scratch/optpar01/test/webinar/lid/org/main.cu:793:21: warning: DPCT1003:9: Migrated API does not return error code. (*, 0) is inserted. You may need to rewrite this code.
                        checkCudaErrors (cudaSetDevice (id) );
                                         ^
/scratch/optpar01/test/webinar/lid/org/main.cu:933:3: warning: DPCT1049:10: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                calculate_F <<<grid_F, block_F>>> (dt, u_d, v_d, F_d);
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:934:3: warning: DPCT1049:11: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                calculate_G <<<grid_G, block_G>>> (dt, u_d, v_d, G_d);
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:937:3: warning: DPCT1049:12: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                sum_pressure <<<grid_pr, block_pr>>> (pres_red_d, pres_black_d, pres_sum_d);
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:1004:3: warning: DPCT1049:13: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                calculate_u <<<grid_pr, block_pr>>> (dt, F_d, pres_red_d, pres_black_d, u_d, max_u_d);
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:1007:3: warning: DPCT1049:14: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                calculate_v <<<grid_pr, block_pr>>> (dt, G_d, pres_red_d, pres_black_d, v_d, max_v_d);
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:1024:3: warning: DPCT1049:15: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                set_BCs <<<grid_bcs, block_bcs>>> (u_d, v_d);
                ^
/scratch/optpar01/test/webinar/lid/org/main.cu:961:4: warning: DPCT1049:16: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                        set_horz_pres_BCs <<<grid_hpbc, block_hpbc>>> (pres_red_d, pres_black_d);
                        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:962:4: warning: DPCT1049:17: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                        set_vert_pres_BCs <<<grid_vpbc, block_hpbc>>> (pres_red_d, pres_black_d);
                        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:968:4: warning: DPCT1049:18: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                        red_kernel <<<grid_pr, block_pr>>> (dt, F_d, G_d, pres_black_d, pres_red_d);
                        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:974:4: warning: DPCT1049:19: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                        black_kernel <<<grid_pr, block_pr>>> (dt, F_d, G_d, pres_red_d, pres_black_d);
                        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:980:4: warning: DPCT1049:20: The workgroup size passed to the SYCL kernel may exceed the limit. To get the device limit, query info::device::max_work_group_size. Adjust the workgroup size if needed.
                        calc_residual <<<grid_pr, block_pr>>> (dt, F_d, G_d, pres_red_d, pres_black_d, res_d);
                        ^
/scratch/optpar01/test/webinar/lid/org/main.cu:1111:19: warning: DPCT1003:21: Migrated API does not return error code. (*, 0) is inserted. You may need to rewrite this code.
        checkCudaErrors (cudaDeviceReset());
                         ^

The directory "dpct_output" is used as "out-root"
Processing: /scratch/optpar01/test/webinar/lid/org/main.cu
Processed 1 file(s) in -in-root folder "/scratch/optpar01/test/webinar/lid/org"

See Diagnostics Reference to resolve warnings and complete the migration:
https://software.intel.com/content/www/us/en/develop/documentation/intel-dpcpp-compatibility-tool-user-guide/top/diagnostics-reference.html
